
# This section is autogenerated by ./pan_generate adcs_monitor /Users/athena/FlightSoftware/src/fsw/FCCode/ADCSBoxMonitor.cpp

@property
def rwa_speed_rd(self):
    return str(self.read_state("adcs_monitor.rwa_speed_rd"))

@rwa_speed_rd.setter
def rwa_speed_rd(self, val):
    self.write_state("adcs_monitor.rwa_speed_rd", str(val))

@property
def rwa_torque_rd(self):
    return str(self.read_state("adcs_monitor.rwa_torque_rd"))

@rwa_torque_rd.setter
def rwa_torque_rd(self, val):
    self.write_state("adcs_monitor.rwa_torque_rd", str(val))

@property
def ssa_mode(self):
    return str(self.read_state("adcs_monitor.ssa_mode"))

@ssa_mode.setter
def ssa_mode(self, val):
    self.write_state("adcs_monitor.ssa_mode", str(val))

@property
def ssa_vec(self):
    return str(self.read_state("adcs_monitor.ssa_vec"))

@ssa_vec.setter
def ssa_vec(self, val):
    self.write_state("adcs_monitor.ssa_vec", str(val))

@property
def mag1_vec(self):
    return str(self.read_state("adcs_monitor.mag1_vec"))

@mag1_vec.setter
def mag1_vec(self, val):
    self.write_state("adcs_monitor.mag1_vec", str(val))

@property
def mag2_vec(self):
    return str(self.read_state("adcs_monitor.mag2_vec"))

@mag2_vec.setter
def mag2_vec(self, val):
    self.write_state("adcs_monitor.mag2_vec", str(val))

@property
def gyr_vec(self):
    return str(self.read_state("adcs_monitor.gyr_vec"))

@gyr_vec.setter
def gyr_vec(self, val):
    self.write_state("adcs_monitor.gyr_vec", str(val))

@property
def gyr_temp(self):
    return str(self.read_state("adcs_monitor.gyr_temp"))

@gyr_temp.setter
def gyr_temp(self, val):
    self.write_state("adcs_monitor.gyr_temp", str(val))

@property
def speed_rd_flag(self):
    return str(self.read_state("adcs_monitor.speed_rd_flag"))

@speed_rd_flag.setter
def speed_rd_flag(self, val):
    self.write_state("adcs_monitor.speed_rd_flag", str(val))

@property
def torque_rd_flag(self):
    return str(self.read_state("adcs_monitor.torque_rd_flag"))

@torque_rd_flag.setter
def torque_rd_flag(self, val):
    self.write_state("adcs_monitor.torque_rd_flag", str(val))

@property
def mag1_vec_flag(self):
    return str(self.read_state("adcs_monitor.mag1_vec_flag"))

@mag1_vec_flag.setter
def mag1_vec_flag(self, val):
    self.write_state("adcs_monitor.mag1_vec_flag", str(val))

@property
def mag2_vec_flag(self):
    return str(self.read_state("adcs_monitor.mag2_vec_flag"))

@mag2_vec_flag.setter
def mag2_vec_flag(self, val):
    self.write_state("adcs_monitor.mag2_vec_flag", str(val))

@property
def gyr_vec_flag(self):
    return str(self.read_state("adcs_monitor.gyr_vec_flag"))

@gyr_vec_flag.setter
def gyr_vec_flag(self, val):
    self.write_state("adcs_monitor.gyr_vec_flag", str(val))

@property
def gyr_temp_flag(self):
    return str(self.read_state("adcs_monitor.gyr_temp_flag"))

@gyr_temp_flag.setter
def gyr_temp_flag(self, val):
    self.write_state("adcs_monitor.gyr_temp_flag", str(val))

@property
def functional(self):
    return str(self.read_state("adcs_monitor.functional"))

@functional.setter
def functional(self, val):
    self.write_state("adcs_monitor.functional", str(val))

@property
def functional_fault(self):
    return str(self.read_state("adcs_monitor.functional_fault"))

@functional_fault.setter
def functional_fault(self, val):
    self.write_state("adcs_monitor.functional_fault", str(val))

@property
def wheel1_fault(self):
    return str(self.read_state("adcs_monitor.wheel1_fault"))

@wheel1_fault.setter
def wheel1_fault(self, val):
    self.write_state("adcs_monitor.wheel1_fault", str(val))

@property
def wheel2_fault(self):
    return str(self.read_state("adcs_monitor.wheel2_fault"))

@wheel2_fault.setter
def wheel2_fault(self, val):
    self.write_state("adcs_monitor.wheel2_fault", str(val))

@property
def wheel3_fault(self):
    return str(self.read_state("adcs_monitor.wheel3_fault"))

@wheel3_fault.setter
def wheel3_fault(self, val):
    self.write_state("adcs_monitor.wheel3_fault", str(val))

@property
def wheel_pot_fault(self):
    return str(self.read_state("adcs_monitor.wheel_pot_fault"))

@wheel_pot_fault.setter
def wheel_pot_fault(self, val):
    self.write_state("adcs_monitor.wheel_pot_fault", str(val))

@property
def ssa_voltage(self):
    return str(self.read_state("adcs_monitor.ssa_voltage"))

@ssa_voltage.setter
def ssa_voltage(self, val):
    self.write_state("adcs_monitor.ssa_voltage", str(val))

@property
def havt_device(self):
    return str(self.read_state("adcs_monitor.havt_device"))

@havt_device.setter
def havt_device(self, val):
    self.write_state("adcs_monitor.havt_device", str(val))

def print_object(self):
    print(f"[TESTCASE] rwa_speed_rd: {self.rwa_speed_rd}")
    print(f"[TESTCASE] rwa_torque_rd: {self.rwa_torque_rd}")
    print(f"[TESTCASE] ssa_mode: {self.ssa_mode}")
    print(f"[TESTCASE] ssa_vec: {self.ssa_vec}")
    print(f"[TESTCASE] mag1_vec: {self.mag1_vec}")
    print(f"[TESTCASE] mag2_vec: {self.mag2_vec}")
    print(f"[TESTCASE] gyr_vec: {self.gyr_vec}")
    print(f"[TESTCASE] gyr_temp: {self.gyr_temp}")
    print(f"[TESTCASE] speed_rd_flag: {self.speed_rd_flag}")
    print(f"[TESTCASE] torque_rd_flag: {self.torque_rd_flag}")
    print(f"[TESTCASE] mag1_vec_flag: {self.mag1_vec_flag}")
    print(f"[TESTCASE] mag2_vec_flag: {self.mag2_vec_flag}")
    print(f"[TESTCASE] gyr_vec_flag: {self.gyr_vec_flag}")
    print(f"[TESTCASE] gyr_temp_flag: {self.gyr_temp_flag}")
    print(f"[TESTCASE] functional: {self.functional}")
    print(f"[TESTCASE] functional_fault: {self.functional_fault}")
    print(f"[TESTCASE] wheel1_fault: {self.wheel1_fault}")
    print(f"[TESTCASE] wheel2_fault: {self.wheel2_fault}")
    print(f"[TESTCASE] wheel3_fault: {self.wheel3_fault}")
    print(f"[TESTCASE] wheel_pot_fault: {self.wheel_pot_fault}")
    print(f"[TESTCASE] ssa_voltage: {self.ssa_voltage}")
    print(f"[TESTCASE] havt_device: {self.havt_device}")

# End autogenerated section
