
# This section is autogenerated by ./pan_generate adcs_cmd /Users/athena/FlightSoftware/src/fsw/FCCode/ADCSBoxController.cpp

@property
def rwa_mode(self):
    return str(self.read_state("adcs_cmd.rwa_mode"))

@rwa_mode.setter
def rwa_mode(self, val):
    self.write_state("adcs_cmd.rwa_mode", str(val))

@property
def rwa_speed_cmd(self):
    return str(self.read_state("adcs_cmd.rwa_speed_cmd"))

@rwa_speed_cmd.setter
def rwa_speed_cmd(self, val):
    self.write_state("adcs_cmd.rwa_speed_cmd", str(val))

@property
def rwa_torque_cmd(self):
    return str(self.read_state("adcs_cmd.rwa_torque_cmd"))

@rwa_torque_cmd.setter
def rwa_torque_cmd(self, val):
    self.write_state("adcs_cmd.rwa_torque_cmd", str(val))

@property
def rwa_speed_filter(self):
    return str(self.read_state("adcs_cmd.rwa_speed_filter"))

@rwa_speed_filter.setter
def rwa_speed_filter(self, val):
    self.write_state("adcs_cmd.rwa_speed_filter", str(val))

@property
def rwa_ramp_filter(self):
    return str(self.read_state("adcs_cmd.rwa_ramp_filter"))

@rwa_ramp_filter.setter
def rwa_ramp_filter(self, val):
    self.write_state("adcs_cmd.rwa_ramp_filter", str(val))

@property
def mtr_mode(self):
    return str(self.read_state("adcs_cmd.mtr_mode"))

@mtr_mode.setter
def mtr_mode(self, val):
    self.write_state("adcs_cmd.mtr_mode", str(val))

@property
def mtr_cmd(self):
    return str(self.read_state("adcs_cmd.mtr_cmd"))

@mtr_cmd.setter
def mtr_cmd(self, val):
    self.write_state("adcs_cmd.mtr_cmd", str(val))

@property
def mtr_limit(self):
    return str(self.read_state("adcs_cmd.mtr_limit"))

@mtr_limit.setter
def mtr_limit(self, val):
    self.write_state("adcs_cmd.mtr_limit", str(val))

@property
def ssa_voltage_filter(self):
    return str(self.read_state("adcs_cmd.ssa_voltage_filter"))

@ssa_voltage_filter.setter
def ssa_voltage_filter(self, val):
    self.write_state("adcs_cmd.ssa_voltage_filter", str(val))

@property
def mag1_mode(self):
    return str(self.read_state("adcs_cmd.mag1_mode"))

@mag1_mode.setter
def mag1_mode(self, val):
    self.write_state("adcs_cmd.mag1_mode", str(val))

@property
def mag2_mode(self):
    return str(self.read_state("adcs_cmd.mag2_mode"))

@mag2_mode.setter
def mag2_mode(self, val):
    self.write_state("adcs_cmd.mag2_mode", str(val))

@property
def imu_mag_filter(self):
    return str(self.read_state("adcs_cmd.imu_mag_filter"))

@imu_mag_filter.setter
def imu_mag_filter(self, val):
    self.write_state("adcs_cmd.imu_mag_filter", str(val))

@property
def imu_gyr_filter(self):
    return str(self.read_state("adcs_cmd.imu_gyr_filter"))

@imu_gyr_filter.setter
def imu_gyr_filter(self, val):
    self.write_state("adcs_cmd.imu_gyr_filter", str(val))

@property
def imu_gyr_temp_filter(self):
    return str(self.read_state("adcs_cmd.imu_gyr_temp_filter"))

@imu_gyr_temp_filter.setter
def imu_gyr_temp_filter(self, val):
    self.write_state("adcs_cmd.imu_gyr_temp_filter", str(val))

@property
def imu_gyr_temp_kp(self):
    return str(self.read_state("adcs_cmd.imu_gyr_temp_kp"))

@imu_gyr_temp_kp.setter
def imu_gyr_temp_kp(self, val):
    self.write_state("adcs_cmd.imu_gyr_temp_kp", str(val))

@property
def imu_gyr_temp_ki(self):
    return str(self.read_state("adcs_cmd.imu_gyr_temp_ki"))

@imu_gyr_temp_ki.setter
def imu_gyr_temp_ki(self, val):
    self.write_state("adcs_cmd.imu_gyr_temp_ki", str(val))

@property
def imu_gyr_temp_kd(self):
    return str(self.read_state("adcs_cmd.imu_gyr_temp_kd"))

@imu_gyr_temp_kd.setter
def imu_gyr_temp_kd(self, val):
    self.write_state("adcs_cmd.imu_gyr_temp_kd", str(val))

@property
def imu_gyr_temp_desired(self):
    return str(self.read_state("adcs_cmd.imu_gyr_temp_desired"))

@imu_gyr_temp_desired.setter
def imu_gyr_temp_desired(self, val):
    self.write_state("adcs_cmd.imu_gyr_temp_desired", str(val))

@property
def havt_reset(self):
    return str(self.read_state("adcs_cmd.havt_reset"))

@havt_reset.setter
def havt_reset(self, val):
    self.write_state("adcs_cmd.havt_reset", str(val))

@property
def havt_disable(self):
    return str(self.read_state("adcs_cmd.havt_disable"))

@havt_disable.setter
def havt_disable(self, val):
    self.write_state("adcs_cmd.havt_disable", str(val))

def print_object(self):
    print(f"[TESTCASE] rwa_mode: {self.rwa_mode}")
    print(f"[TESTCASE] rwa_speed_cmd: {self.rwa_speed_cmd}")
    print(f"[TESTCASE] rwa_torque_cmd: {self.rwa_torque_cmd}")
    print(f"[TESTCASE] rwa_speed_filter: {self.rwa_speed_filter}")
    print(f"[TESTCASE] rwa_ramp_filter: {self.rwa_ramp_filter}")
    print(f"[TESTCASE] mtr_mode: {self.mtr_mode}")
    print(f"[TESTCASE] mtr_cmd: {self.mtr_cmd}")
    print(f"[TESTCASE] mtr_limit: {self.mtr_limit}")
    print(f"[TESTCASE] ssa_voltage_filter: {self.ssa_voltage_filter}")
    print(f"[TESTCASE] mag1_mode: {self.mag1_mode}")
    print(f"[TESTCASE] mag2_mode: {self.mag2_mode}")
    print(f"[TESTCASE] imu_mag_filter: {self.imu_mag_filter}")
    print(f"[TESTCASE] imu_gyr_filter: {self.imu_gyr_filter}")
    print(f"[TESTCASE] imu_gyr_temp_filter: {self.imu_gyr_temp_filter}")
    print(f"[TESTCASE] imu_gyr_temp_kp: {self.imu_gyr_temp_kp}")
    print(f"[TESTCASE] imu_gyr_temp_ki: {self.imu_gyr_temp_ki}")
    print(f"[TESTCASE] imu_gyr_temp_kd: {self.imu_gyr_temp_kd}")
    print(f"[TESTCASE] imu_gyr_temp_desired: {self.imu_gyr_temp_desired}")
    print(f"[TESTCASE] havt_reset: {self.havt_reset}")
    print(f"[TESTCASE] havt_disable: {self.havt_disable}")

# End autogenerated section
